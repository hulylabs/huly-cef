name: Release

on:
  push:
    branches:
      - 'release/v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract version from branch name
        id: version
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          VERSION=${BRANCH_NAME#release/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"
      
      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          response=$(gh release view "$VERSION")
          echo "$response"
          echo "Release ${VERSION} does not exist, proceeding..."
      
      # - name: Setup Rust
      #   uses: actions-rust-lang/setup-rust-toolchain@v1
      #   with:
      #     toolchain: stable
      
      # - name: Build huly-cef-websockets
      #   run: |
      #     cargo run --bin huly-cef-build --release -- --profile release
      
      # - name: Prepare artifacts
      #   run: |
      #     mkdir -p artifacts
          
      #     # Linux artifact
      #     if [ -f "target/release/huly-cef-websockets" ]; then
      #       cp target/release/huly-cef-websockets artifacts/huly-cef-websockets-linux
      #     fi
          
      #     # Windows artifact  
      #     if [ -f "target/release/huly-cef-websockets.exe" ]; then
      #       cp target/release/huly-cef-websockets.exe artifacts/huly-cef-websockets-windows.exe
      #     fi
          
      #     # macOS artifact
      #     if [ -d "target/release/huly-cef-websockets.app" ]; then
      #       tar -czf artifacts/huly-cef-websockets-macos.tar.gz -C target/release huly-cef-websockets.app
      #     fi
      
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.version.outputs.version }}
      #     release_name: Release ${{ steps.version.outputs.version }}
      #     draft: false
      #     prerelease: false
      
      # - name: Upload Linux artifact
      #   if: hashFiles('artifacts/huly-cef-websockets-linux') != ''
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./artifacts/huly-cef-websockets-linux
      #     asset_name: huly-cef-websockets-linux
      #     asset_content_type: application/octet-stream
      
      # - name: Upload Windows artifact
      #   if: hashFiles('artifacts/huly-cef-websockets-windows.exe') != ''
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./artifacts/huly-cef-websockets-windows.exe
      #     asset_name: huly-cef-websockets-windows.exe
      #     asset_content_type: application/octet-stream
      
      # - name: Upload macOS artifact
      #   if: hashFiles('artifacts/huly-cef-websockets-macos.tar.gz') != ''
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./artifacts/huly-cef-websockets-macos.tar.gz
      #     asset_name: huly-cef-websockets-macos.tar.gz
      #     asset_content_type: application/gzip
